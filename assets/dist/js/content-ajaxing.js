!function(){const a={NODE_ENV:"production"};try{if(process)return process.env=Object.assign({},process.env),void Object.assign(process.env,a)}catch(a){}globalThis.process={env:a}}(),((a,t,e)=>{let s=new IntersectionObserver((a=>{a.forEach((a=>{if(a.isIntersecting){let e=a.target;e.dataset.ajaxScroll&&fetch(e.dataset.ajaxScroll).then((a=>a.text())).then((a=>{if(e.innerHTML=a,e.classList.add("loaded"),t.attachBehaviors(e),e.dataset.ajaxEvent){const a=new Event(e.dataset.ajaxEvent);window.dispatchEvent(a)}})),e.dataset.ajaxCommands&&t.ajax({url:e.dataset.ajaxCommands,httpMethod:"GET"}).execute(),s.unobserve(e)}}))}),{root:null,rootMargin:"0px",threshold:1});t.behaviors.customAjaxContent={attach:function(a,t){a.querySelectorAll("[data-ajax-scroll]:not(.observing)").forEach((a=>{s.observe(a),a.classList.add("observing")}));a.querySelectorAll("[data-ajax-commands]:not(.observing)").forEach((a=>{s.observe(a),a.classList.add("observing")}));document.querySelectorAll("[data-ajax-now]").forEach((a=>{fetch(a.dataset.ajaxNow).then((a=>a.text())).then((t=>{a.innerHTML=t,a.removeAttribute("data-ajax-now"),a.classList.add("ajax-now--loaded")}))}))}}})(jQuery,Drupal,drupalSettings);